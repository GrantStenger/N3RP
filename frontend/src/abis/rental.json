{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lenderAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_borrowerAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nftId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_dueDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rentalPayment",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_collateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_collateralPayoutPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_nullificationTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AlreadyDeposited",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BadTimeBounds",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientValue",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidState",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NonTokenOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "NftReturned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "PayoutPeriodBegins",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "PayoutPeriodEnds",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "RentalStarted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "borrowerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collateralPayoutPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collectedCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositEth",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositNft",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dueDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ethIsDeposited",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lenderAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftCollection",
      "outputs": [
        {
          "internalType": "contract ERC721",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftIsDeposited",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nullificationTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rentalPayment",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rentalStartTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "returnNft",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawEth",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawNft",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "325:11097:5:-:0;;;3173:1199;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3555:35;;-1:-1:-1;;;3555:35:5;;;;;1097:25:10;;;-1:-1:-1;;;;;3555:53:5;;;;:27;;;;;;1070:18:10;;3555:35:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3555:53:5;;3551:81;;3617:15;;-1:-1:-1;;;3617:15:5;;;;;;;;;;;3551:81;3762:28;3779:11;3762:14;:28;:::i;:::-;3735:16;-1:-1:-1;;;;;3735:24:5;;:55;3731:87;;;3799:19;;-1:-1:-1;;;3799:19:5;;;;;;;;;;;3731:87;3896:15;3885:8;:26;3881:54;;;3920:15;;-1:-1:-1;;;3920:15:5;;;;;;;;;;;3881:54;-1:-1:-1;;;;;3996:39:5;;;;;4045:43;;;;;4098:35;;;;;;4143:14;;;;;4167:18;;4195:30;;4235:24;;;;;4269:48;;;;;4327:38;;325:11097;;14:177:10;93:13;;-1:-1:-1;;;;;135:31:10;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:750::-;338:6;346;354;362;370;378;386;394;402;455:3;443:9;434:7;430:23;426:33;423:53;;;472:1;469;462:12;423:53;495:40;525:9;495:40;:::i;:::-;485:50;;554:49;599:2;588:9;584:18;554:49;:::i;:::-;544:59;;622:49;667:2;656:9;652:18;622:49;:::i;:::-;612:59;;711:2;700:9;696:18;690:25;680:35;;755:3;744:9;740:19;734:26;724:36;;800:3;789:9;785:19;779:26;769:36;;845:3;834:9;830:19;824:26;814:36;;890:3;879:9;875:19;869:26;859:36;;935:3;924:9;920:19;914:26;904:36;;196:750;;;;;;;;;;;:::o;1133:208::-;1203:6;1256:2;1244:9;1235:7;1231:23;1227:32;1224:52;;;1272:1;1269;1262:12;1224:52;1295:40;1325:9;1295:40;:::i;:::-;1285:50;1133:208;-1:-1:-1;;;1133:208:10:o;1346:225::-;1386:3;1417:1;1413:6;1410:1;1407:13;1404:136;;;1462:10;1457:3;1453:20;1450:1;1443:31;1497:4;1494:1;1487:15;1525:4;1522:1;1515:15;1404:136;-1:-1:-1;1556:9:10;;1346:225::o;:::-;325:11097:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061011f5760003560e01c80638acc6adc116100a0578063c6bc518211610064578063c6bc51821461036b578063ce09ffda1461039f578063d8dfeb45146103b9578063de5fc8ec146103ed578063e433e2cc146103f557600080fd5b80638acc6adc146103005780638ed013a61461032f578063a0ef91df14610337578063ae233e9e1461033f578063b70a72971461035557600080fd5b806359c153be116100e757806359c153be146102035780636588103b1461021857806369d8125514610264578063786716fe146102985780637ba61ea5146102cc57600080fd5b8063150b7a02146101245780632572fd541461016e57806326102bf814610185578063439370b1146101c75780635337bead146101cf575b600080fd5b34801561013057600080fd5b5061015061013f36600461129d565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020015b60405180910390f35b34801561017a57600080fd5b50610183610429565b005b34801561019157600080fd5b506101b97f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610165565b610183610611565b3480156101db57600080fd5b506101b97f000000000000000000000000000000000000000000000000000000000000000081565b34801561020f57600080fd5b50610183610b22565b34801561022457600080fd5b5061024c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610165565b34801561027057600080fd5b5061024c7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102a457600080fd5b506101b97f000000000000000000000000000000000000000000000000000000000000000081565b3480156102d857600080fd5b5061024c7f000000000000000000000000000000000000000000000000000000000000000081565b34801561030c57600080fd5b5060025461031f90610100900460ff1681565b6040519015158152602001610165565b610183610d2c565b610183610e6f565b34801561034b57600080fd5b506101b960005481565b34801561036157600080fd5b506101b960015481565b34801561037757600080fd5b506101b97f000000000000000000000000000000000000000000000000000000000000000081565b3480156103ab57600080fd5b5060025461031f9060ff1681565b3480156103c557600080fd5b506101b97f000000000000000000000000000000000000000000000000000000000000000081565b610183610f8d565b34801561040157600080fd5b506101b97f000000000000000000000000000000000000000000000000000000000000000081565b604051632142170760e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906342842e0e906104b99033907f0000000000000000000000000000000000000000000000000000000000000000907f00000000000000000000000000000000000000000000000000000000000000009060040161133c565b600060405180830381600087803b1580156104d357600080fd5b505af11580156104e7573d6000803e3d6000fd5b505050507f0000000000000000000000000000000000000000000000000000000000000000421161058a576040516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016907f000000000000000000000000000000000000000000000000000000000000000080156108fc02916000818181858888f19350505050158015610587573d6000803e3d6000fd5b50565b7f000000000000000000000000000000000000000000000000000000000000000042111561060f576105ba610b22565b6040516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016904780156108fc02916000818181858888f19350505050158015610587573d6000803e3d6000fd5b565b600254610100900460ff161561063a5760405163d5a8211560e01b815260040160405180910390fd5b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610682576040516282b42960e81b815260040160405180910390fd5b6106cc7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611376565b3410156106ec5760405163044044a560e21b815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000042106108bb576040516331a9108f60e11b81527f0000000000000000000000000000000000000000000000000000000000000000600482015230906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636352211e90602401602060405180830381865afa158015610799573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bd919061138e565b6001600160a01b0316141561088f57604051632142170760e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906342842e0e9061085c9030907f0000000000000000000000000000000000000000000000000000000000000000907f00000000000000000000000000000000000000000000000000000000000000009060040161133c565b600060405180830381600087803b15801561087657600080fd5b505af115801561088a573d6000803e3d6000fd5b505050505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316ff5b6109057f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611376565b34111561098e57336108fc61095a7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611376565b61096490346113b2565b6040518115909202916000818181858888f1935050505015801561098c573d6000803e3d6000fd5b505b60025460ff166109a9576002805461ff001916610100179055565b6040516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016907f000000000000000000000000000000000000000000000000000000000000000080156108fc02916000818181858888f19350505050158015610a1e573d6000803e3d6000fd5b50604051632142170760e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906342842e0e90610aaf9030907f0000000000000000000000000000000000000000000000000000000000000000907f00000000000000000000000000000000000000000000000000000000000000009060040161133c565b600060405180830381600087803b158015610ac957600080fd5b505af1158015610add573d6000803e3d6000fd5b50506002805461ff00191661010017905550506040517f98db6cf82b62fc4af022f87beb70f45391bdfcd1117ed6b4f5f7dd42e12e95bf90600090a161060f42600055565b7f00000000000000000000000000000000000000000000000000000000000000004211610b625760405163baf3f0f760e01b815260040160405180910390fd5b6000610b8e7f0000000000000000000000000000000000000000000000000000000000000000426113b2565b905060007f00000000000000000000000000000000000000000000000000000000000000008210610be057507f0000000000000000000000000000000000000000000000000000000000000000610c38565b7f0000000000000000000000000000000000000000000000000000000000000000610c2b7f0000000000000000000000000000000000000000000000000000000000000000846113c9565b610c3591906113e8565b90505b600154610c4590826113b2565b90508060016000828254610c599190611376565b9091555050600254610100900460ff168015610c77575060025460ff165b15610cd7576040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169082156108fc029083906000818181858888f19350505050158015610cd2573d6000803e3d6000fd5b505050565b6040516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016904780156108fc02916000818181858888f19350505050158015610cd2573d6000803e3d6000fd5b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610d74576040516282b42960e81b815260040160405180910390fd5b60025460ff161580610d8d5750600254610100900460ff165b15610dab5760405163baf3f0f760e01b815260040160405180910390fd5b604051632142170760e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906342842e0e90610e3b9030907f0000000000000000000000000000000000000000000000000000000000000000907f00000000000000000000000000000000000000000000000000000000000000009060040161133c565b600060405180830381600087803b158015610e5557600080fd5b505af1158015610e69573d6000803e3d6000fd5b50505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610eb7576040516282b42960e81b815260040160405180910390fd5b60025460ff1680610ed05750600254610100900460ff16155b15610eee5760405163baf3f0f760e01b815260040160405180910390fd5b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166108fc610f657f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611376565b6040518115909202916000818181858888f19350505050158015610587573d6000803e3d6000fd5b60025460ff1615610fb15760405163d5a8211560e01b815260040160405180910390fd5b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ff9576040516282b42960e81b815260040160405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000421061104c577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316ff5b600254610100900460ff1661111057604051632142170760e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906342842e0e906110cb90339030907f00000000000000000000000000000000000000000000000000000000000000009060040161133c565b600060405180830381600087803b1580156110e557600080fd5b505af11580156110f9573d6000803e3d6000fd5b50506002805460ff191660011790555061060f9050565b604051632142170760e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906342842e0e906111a09033907f0000000000000000000000000000000000000000000000000000000000000000907f00000000000000000000000000000000000000000000000000000000000000009060040161133c565b600060405180830381600087803b1580156111ba57600080fd5b505af11580156111ce573d6000803e3d6000fd5b50506040516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001692507f000000000000000000000000000000000000000000000000000000000000000080156108fc029250906000818181858888f19350505050158015611248573d6000803e3d6000fd5b506002805460ff191660011790556040517f98db6cf82b62fc4af022f87beb70f45391bdfcd1117ed6b4f5f7dd42e12e95bf90600090a161060f42600055565b6001600160a01b038116811461058757600080fd5b6000806000806000608086880312156112b557600080fd5b85356112c081611288565b945060208601356112d081611288565b935060408601359250606086013567ffffffffffffffff808211156112f457600080fd5b818801915088601f83011261130857600080fd5b81358181111561131757600080fd5b89602082850101111561132957600080fd5b9699959850939650602001949392505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b634e487b7160e01b600052601160045260246000fd5b6000821982111561138957611389611360565b500190565b6000602082840312156113a057600080fd5b81516113ab81611288565b9392505050565b6000828210156113c4576113c4611360565b500390565b60008160001904831182151516156113e3576113e3611360565b500290565b60008261140557634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220ff304547504a1e59f1213b81bb8c1b289890b2cfb8d3123ca7bba3c800cccef664736f6c634300080a0033",
    "sourceMap": "325:11097:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11217:203;;;;;;;;;;-1:-1:-1;11217:203:5;;;;;:::i;:::-;-1:-1:-1;;;11217:203:5;;;;;;;;;;;-1:-1:-1;;;;;;1253:33:10;;;1235:52;;1223:2;1208:18;11217:203:5;;;;;;;;8649:751;;;;;;;;;;;;;:::i;:::-;;1152:38;;;;;;;;;;;;;;;;;;1444:25:10;;;1432:2;1417:18;1152:38:5;1298:177:10;5896:1583:5;;;:::i;1433:47::-;;;;;;;;;;;;;;;9538:1072;;;;;;;;;;;;;:::i;764:37::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1659:32:10;;;1641:51;;1629:2;1614:18;764:37:5;1480:218:10;570:38:5;;;;;;;;;;;;;;;1001:32;;;;;;;;;;;;;;;667:40;;;;;;;;;;;;;;;2294:26;;;;;;;;;;-1:-1:-1;2294:26:5;;;;;;;;;;;;;;2076:14:10;;2069:22;2051:41;;2039:2;2024:18;2294:26:5;1911:187:10;7570:454:5;;;:::i;8112:468::-;;;:::i;1994:30::-;;;;;;;;;;;;;;;;2096:34;;;;;;;;;;;;;;;;864:30;;;;;;;;;;;;;;;2189:26;;;;;;;;;;-1:-1:-1;2189:26:5;;;;;;;;1276:35;;;;;;;;;;;;;;;4683:1048;;;:::i;1610:42::-;;;;;;;;;;;;;;;8649:751;8747:64;;-1:-1:-1;;;8747:64:5;;-1:-1:-1;;;;;8747:13:5;:30;;;;:64;;8778:10;;8790:13;;8805:5;;8747:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8899:7;8880:15;:26;8876:518;;8975:45;;-1:-1:-1;;;;;8983:15:5;8975:33;;9009:10;8975:45;;;;;;;;;9009:10;8975:33;:45;;;;;;;;;;;;;;;;;;;;;8649:751::o;8876:518::-;9149:7;9131:15;:25;9127:267;;;9232:20;:18;:20::i;:::-;9327:56;;-1:-1:-1;;;;;9335:15:5;9327:33;;9361:21;9327:56;;;;;;;;;9361:21;9327:33;:56;;;;;;;;;;;;;;;;;;;9127:267;8649:751::o;5896:1583::-;5992:14;;;;;;;5988:45;;;6015:18;;-1:-1:-1;;;6015:18:5;;;;;;;;;;;5988:45;6098:10;-1:-1:-1;;;;;6112:15:5;6098:29;;6094:56;;6136:14;;-1:-1:-1;;;6136:14:5;;;;;;;;;;;6094:56;6177:26;6193:10;6177:13;:26;:::i;:::-;6165:9;:38;6161:70;;;6212:19;;-1:-1:-1;;;6212:19:5;;;;;;;;;;;6161:70;6328:17;6309:15;:36;6305:269;;6365:28;;-1:-1:-1;;;6365:28:5;;6387:5;6365:28;;;1444:25:10;6405:4:5;;-1:-1:-1;;;;;6365:13:5;:21;;;;1417:18:10;;6365:28:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6365:45:5;;6361:151;;;6430:67;;-1:-1:-1;;;6430:67:5;;-1:-1:-1;;;;;6430:13:5;:30;;;;:67;;6469:4;;6476:13;;6491:5;;6430:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6361:151;6546:15;-1:-1:-1;;;;;6525:38:5;;6305:269;6695:26;6711:10;6695:13;:26;:::i;:::-;6683:9;:38;6679:139;;;6745:10;6737:70;6779:26;6795:10;6779:13;:26;:::i;:::-;6766:40;;:9;:40;:::i;:::-;6737:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6679:139;6916:14;;;;6911:562;;7013:14;:21;;-1:-1:-1;;7013:21:5;;;;;8649:751::o;6911:562::-;7170:46;;-1:-1:-1;;;;;7178:13:5;7170:31;;7202:13;7170:46;;;;;;;;;7202:13;7170:31;:46;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7296:69:5;;-1:-1:-1;;;7296:69:5;;-1:-1:-1;;;;;7296:13:5;:30;;;;:69;;7335:4;;7342:15;;7359:5;;7296:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7379:14:5;:21;;-1:-1:-1;;7379:21:5;;;;;-1:-1:-1;;7419:15:5;;;;7379:21;;7419:15;7448:14;10955:15;10937;:33;10894:83;9538:1072;9712:7;9693:15;:26;9689:53;;9728:14;;-1:-1:-1;;;9728:14:5;;;;;;;;;;;9689:53;9753:17;9773:25;9791:7;9773:15;:25;:::i;:::-;9753:45;;9808:21;9856:22;9843:9;:35;9839:188;;-1:-1:-1;9910:10:5;9839:188;;;9994:22;9968;9980:10;9968:9;:22;:::i;:::-;9967:49;;;;:::i;:::-;9951:65;;9839:188;10106:19;;10089:36;;;;:::i;:::-;;;10202:13;10179:19;;:36;;;;;;;:::i;:::-;;;;-1:-1:-1;;10229:14:5;;;;;;;:32;;;;-1:-1:-1;10247:14:5;;;;10229:32;10226:378;;;10348:46;;-1:-1:-1;;;;;10356:13:5;10348:31;;:46;;;;;10380:13;;10348:46;;;;10380:13;10348:31;:46;;;;;;;;;;;;;;;;;;;;;9575:1035;;9538:1072::o;10226:378::-;10537:56;;-1:-1:-1;;;;;10545:15:5;10537:33;;10571:21;10537:56;;;;;;;;;10571:21;10537:33;:56;;;;;;;;;;;;;;;;;;;7570:454;7685:10;-1:-1:-1;;;;;7699:13:5;7685:27;;7681:54;;7721:14;;-1:-1:-1;;;7721:14:5;;;;;;;;;;;7681:54;7841:14;;;;7840:15;;:33;;-1:-1:-1;7859:14:5;;;;;;;7840:33;7836:60;;;7882:14;;-1:-1:-1;;;7882:14:5;;;;;;;;;;;7836:60;7950:67;;-1:-1:-1;;;7950:67:5;;-1:-1:-1;;;;;7950:13:5;:30;;;;:67;;7989:4;;7996:13;;8011:5;;7950:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7570:454::o;8112:468::-;8231:10;-1:-1:-1;;;;;8245:15:5;8231:29;;8227:56;;8269:14;;-1:-1:-1;;;8269:14:5;;;;;;;;;;;8227:56;8382:14;;;;;:33;;-1:-1:-1;8401:14:5;;;;;;;8400:15;8382:33;8378:60;;;8424:14;;-1:-1:-1;;;8424:14:5;;;;;;;;;;;8378:60;-1:-1:-1;;;;;8520:15:5;8512:33;:61;8546:26;8562:10;8546:13;:26;:::i;:::-;8512:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4683:1048;4779:14;;;;4775:45;;;4802:18;;-1:-1:-1;;;4802:18:5;;;;;;;;;;;4775:45;4892:10;-1:-1:-1;;;;;4906:13:5;4892:27;;4888:54;;4928:14;;-1:-1:-1;;;4928:14:5;;;;;;;;;;;4888:54;5039:17;5020:15;:36;5016:105;;5093:15;-1:-1:-1;;;;;5072:38:5;;5016:105;5235:14;;;;;;;5230:495;;5265:64;;-1:-1:-1;;;5265:64:5;;-1:-1:-1;;;;;5265:13:5;:30;;;;:64;;5296:10;;5316:4;;5323:5;;5265:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5343:14:5;:21;;-1:-1:-1;;5343:21:5;5360:4;5343:21;;;-1:-1:-1;5230:495:5;;-1:-1:-1;5230:495:5;;5395:66;;-1:-1:-1;;;5395:66:5;;-1:-1:-1;;;;;5395:13:5;:30;;;;:66;;5426:10;;5438:15;;5455:5;;5395:66;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5571:46:5;;-1:-1:-1;;;;;5579:13:5;5571:31;;-1:-1:-1;5603:13:5;5571:46;;;;;-1:-1:-1;5603:13:5;5571:46;;;;5603:13;5571:31;:46;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5631:14:5;:21;;-1:-1:-1;;5631:21:5;5648:4;5631:21;;;5671:15;;;;5631:14;;5671:15;5700:14;10955:15;10937;:33;10894:83;14:131:10;-1:-1:-1;;;;;89:31:10;;79:42;;69:70;;135:1;132;125:12;150:936;247:6;255;263;271;279;332:3;320:9;311:7;307:23;303:33;300:53;;;349:1;346;339:12;300:53;388:9;375:23;407:31;432:5;407:31;:::i;:::-;457:5;-1:-1:-1;514:2:10;499:18;;486:32;527:33;486:32;527:33;:::i;:::-;579:7;-1:-1:-1;633:2:10;618:18;;605:32;;-1:-1:-1;688:2:10;673:18;;660:32;711:18;741:14;;;738:34;;;768:1;765;758:12;738:34;806:6;795:9;791:22;781:32;;851:7;844:4;840:2;836:13;832:27;822:55;;873:1;870;863:12;822:55;913:2;900:16;939:2;931:6;928:14;925:34;;;955:1;952;945:12;925:34;1000:7;995:2;986:6;982:2;978:15;974:24;971:37;968:57;;;1021:1;1018;1011:12;968:57;150:936;;;;-1:-1:-1;150:936:10;;-1:-1:-1;1052:2:10;1044:11;;1074:6;150:936;-1:-1:-1;;;150:936:10:o;2103:375::-;-1:-1:-1;;;;;2361:15:10;;;2343:34;;2413:15;;;;2408:2;2393:18;;2386:43;2460:2;2445:18;;2438:34;;;;2293:2;2278:18;;2103:375::o;2483:127::-;2544:10;2539:3;2535:20;2532:1;2525:31;2575:4;2572:1;2565:15;2599:4;2596:1;2589:15;2615:128;2655:3;2686:1;2682:6;2679:1;2676:13;2673:39;;;2692:18;;:::i;:::-;-1:-1:-1;2728:9:10;;2615:128::o;2748:251::-;2818:6;2871:2;2859:9;2850:7;2846:23;2842:32;2839:52;;;2887:1;2884;2877:12;2839:52;2919:9;2913:16;2938:31;2963:5;2938:31;:::i;:::-;2988:5;2748:251;-1:-1:-1;;;2748:251:10:o;3004:125::-;3044:4;3072:1;3069;3066:8;3063:34;;;3077:18;;:::i;:::-;-1:-1:-1;3114:9:10;;3004:125::o;3134:168::-;3174:7;3240:1;3236;3232:6;3228:14;3225:1;3222:21;3217:1;3210:9;3203:17;3199:45;3196:71;;;3247:18;;:::i;:::-;-1:-1:-1;3287:9:10;;3134:168::o;3307:217::-;3347:1;3373;3363:132;;3417:10;3412:3;3408:20;3405:1;3398:31;3452:4;3449:1;3442:15;3480:4;3477:1;3470:15;3363:132;-1:-1:-1;3509:9:10;;3307:217::o",
    "linkReferences": {},
    "immutableReferences": {
      "4069": [
        {
          "start": 630,
          "length": 32
        },
        {
          "start": 1135,
          "length": 32
        },
        {
          "start": 2066,
          "length": 32
        },
        {
          "start": 2486,
          "length": 32
        },
        {
          "start": 3209,
          "length": 32
        },
        {
          "start": 3383,
          "length": 32
        },
        {
          "start": 3569,
          "length": 32
        },
        {
          "start": 4028,
          "length": 32
        },
        {
          "start": 4573,
          "length": 32
        }
      ],
      "4072": [
        {
          "start": 734,
          "length": 32
        },
        {
          "start": 1311,
          "length": 32
        },
        {
          "start": 1479,
          "length": 32
        },
        {
          "start": 1605,
          "length": 32
        },
        {
          "start": 2193,
          "length": 32
        },
        {
          "start": 2661,
          "length": 32
        },
        {
          "start": 3300,
          "length": 32
        },
        {
          "start": 3706,
          "length": 32
        },
        {
          "start": 3832,
          "length": 32
        },
        {
          "start": 4130,
          "length": 32
        },
        {
          "start": 4438,
          "length": 32
        }
      ],
      "4076": [
        {
          "start": 554,
          "length": 32
        },
        {
          "start": 1088,
          "length": 32
        },
        {
          "start": 1874,
          "length": 32
        },
        {
          "start": 2019,
          "length": 32
        },
        {
          "start": 2614,
          "length": 32
        },
        {
          "start": 3522,
          "length": 32
        },
        {
          "start": 4210,
          "length": 32
        },
        {
          "start": 4391,
          "length": 32
        }
      ],
      "4079": [
        {
          "start": 893,
          "length": 32
        },
        {
          "start": 1169,
          "length": 32
        },
        {
          "start": 1826,
          "length": 32
        },
        {
          "start": 2100,
          "length": 32
        },
        {
          "start": 2695,
          "length": 32
        },
        {
          "start": 3603,
          "length": 32
        },
        {
          "start": 4259,
          "length": 32
        },
        {
          "start": 4472,
          "length": 32
        }
      ],
      "4082": [
        {
          "start": 682,
          "length": 32
        },
        {
          "start": 1261,
          "length": 32
        },
        {
          "start": 1420,
          "length": 32
        },
        {
          "start": 2852,
          "length": 32
        },
        {
          "start": 2921,
          "length": 32
        }
      ],
      "4085": [
        {
          "start": 407,
          "length": 32
        },
        {
          "start": 1704,
          "length": 32
        },
        {
          "start": 2273,
          "length": 32
        },
        {
          "start": 2358,
          "length": 32
        },
        {
          "start": 2521,
          "length": 32
        },
        {
          "start": 3905,
          "length": 32
        },
        {
          "start": 4609,
          "length": 32
        }
      ],
      "4088": [
        {
          "start": 971,
          "length": 32
        },
        {
          "start": 1346,
          "length": 32
        },
        {
          "start": 1671,
          "length": 32
        },
        {
          "start": 2240,
          "length": 32
        },
        {
          "start": 2325,
          "length": 32
        },
        {
          "start": 3004,
          "length": 32
        },
        {
          "start": 3078,
          "length": 32
        },
        {
          "start": 3872,
          "length": 32
        }
      ],
      "4091": [
        {
          "start": 481,
          "length": 32
        },
        {
          "start": 2964,
          "length": 32
        },
        {
          "start": 3042,
          "length": 32
        }
      ],
      "4094": [
        {
          "start": 1031,
          "length": 32
        },
        {
          "start": 1774,
          "length": 32
        },
        {
          "start": 4091,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "borrowerAddress()": "7ba61ea5",
    "collateral()": "d8dfeb45",
    "collateralPayoutPeriod()": "5337bead",
    "collectedCollateral()": "b70a7297",
    "depositEth()": "439370b1",
    "depositNft()": "de5fc8ec",
    "dueDate()": "786716fe",
    "ethIsDeposited()": "8acc6adc",
    "lenderAddress()": "69d81255",
    "nftCollection()": "6588103b",
    "nftId()": "c6bc5182",
    "nftIsDeposited()": "ce09ffda",
    "nullificationTime()": "e433e2cc",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02",
    "rentalPayment()": "26102bf8",
    "rentalStartTime()": "ae233e9e",
    "returnNft()": "2572fd54",
    "withdrawCollateral()": "59c153be",
    "withdrawEth()": "a0ef91df",
    "withdrawNft()": "8ed013a6"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lenderAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_borrowerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dueDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rentalPayment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_collateralPayoutPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_nullificationTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyDeposited\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BadTimeBounds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidState\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonTokenOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"NftReturned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PayoutPeriodBegins\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PayoutPeriodEnds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"RentalStarted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"borrowerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralPayoutPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectedCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositNft\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dueDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethIsDeposited\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lenderAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftCollection\",\"outputs\":[{\"internalType\":\"contract ERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftIsDeposited\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nullificationTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rentalPayment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rentalStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"returnNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawNft\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"gstenger98, andreas <andreas@nascent.xyz>\",\"kind\":\"dev\",\"methods\":{\"withdrawCollateral()\":{\"details\":\"Anyone can call to withdraw collateral to lender\"}},\"stateVariables\":{\"dueDate\":{\"details\":\"Measured as a future block timestamp\"},\"rentalStartTime\":{\"details\":\"NFT and rental payment have been sent to borrower and lender when this isn't zero\"}},\"title\":\"Rental\",\"version\":1},\"userdoc\":{\"errors\":{\"InsufficientValue()\":[{\"notice\":\"-------------------------------------------- /// ------------------- ERRORS ----------------- /// -------------------------------------------- ///\"}]},\"events\":{\"RentalStarted()\":{\"notice\":\"-------------------------------------------- /// ------------------- EVENTS ----------------- /// -------------------------------------------- ///\"}},\"kind\":\"user\",\"methods\":{\"borrowerAddress()\":{\"notice\":\"The address of the tempory borrower\"},\"collateral()\":{\"notice\":\"The amount of additional ETH the lender requires as collateral\"},\"collateralPayoutPeriod()\":{\"notice\":\"The amount of time the collateral will be linearly paid out over if the NFT isn't returned on time\"},\"collectedCollateral()\":{\"notice\":\"The amount of collateral collected by the lender\"},\"constructor\":{\"notice\":\"Permissionless Rental Creation\"},\"depositEth()\":{\"notice\":\"Allows the borrow to post rent plus collateralTransfers the NFT to the borrower if the token has been deposited by the lender\"},\"depositNft()\":{\"notice\":\"Lender must deposit the ERC721 token to enable lendingFirst step after Rental Contract Construction\"},\"dueDate()\":{\"notice\":\"The expiration time of the rental\"},\"ethIsDeposited()\":{\"notice\":\"Store if the borrower's required ETH has been deposited\"},\"lenderAddress()\":{\"notice\":\"The address of the original owner\"},\"nftCollection()\":{\"notice\":\"The collection of the NFT to lend\"},\"nftId()\":{\"notice\":\"The id of the NFT within the collection\"},\"nftIsDeposited()\":{\"notice\":\"Store if the NFT has been deposited\"},\"nullificationTime()\":{\"notice\":\"The contract deployer specifies a period by which the assets must be deposited else the contract is voided\"},\"onERC721Received(address,address,uint256,bytes)\":{\"notice\":\"Allows this contract to custody ERC721 Tokens\"},\"rentalPayment()\":{\"notice\":\"The amount of ETH the borrower must pay the lender in order to rent the NFT if returned on time\"},\"rentalStartTime()\":{\"notice\":\"The time when the rental contract officially begins\"},\"returnNft()\":{\"notice\":\"Allows the Borrower to return the borrowed NFT\"},\"withdrawCollateral()\":{\"notice\":\"Transfers the amount of collateral owed to the lender\"},\"withdrawEth()\":{\"notice\":\"Allows the borrower to withdraw eth if the lender doesn't deposit\"},\"withdrawNft()\":{\"notice\":\"Allows the lender to withdraw an nft if the borrower doesn't deposit\"}},\"notice\":\"A Collateral-based ERC721 Token Rental Protocol\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Rental.sol\":\"Rental\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/utils/math/\",\":prb-math/=lib/prb-math/contracts/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/solmate/lib/weird-erc20/src/\"]},\"sources\":{\"lib/solmate/src/tokens/ERC721.sol\":{\"keccak256\":\"0xf97378ab999188b3d5d97037fabbecbc726892c74cba6536899b852eb4756d6a\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a1861567f931416ad6b4b461fb55c7819461e9bc130a416892906f65d9d2b92c\",\"dweb:/ipfs/QmYRkJ6ahJz8BhdbntkgSuLxvKtwdLRyCCny9R3dVvNQm5\"]},\"src/Rental.sol\":{\"keccak256\":\"0x7c84f70be2692a8fd8bc5411cb13212f1cdd1f9312f206883be489161761eb77\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://59c7c141cdd6b2bd463d21b1929a0d9975a67529ef6a8d4f792eb63706eabdc1\",\"dweb:/ipfs/QmdpAhysYC3EF7RMuYcVBMy7MsuZJufKLtC5Pi87FMzX6X\"]},\"src/interfaces/IERC721TokenReceiver.sol\":{\"keccak256\":\"0xc1bcde89ec7148df2835879ddb30fad6d5d58daaaea09147c89746929893ad6c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://da41afaa1b6970d3c9bdeab495243d4cb63a93042cf26c0681a5e4c0b74f1971\",\"dweb:/ipfs/QmTdGNdzEkuYdhteCSgqWri5i1G7KhcU1vSHWfGfozBdgj\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.10+commit.fc410830"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_lenderAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_borrowerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_nftAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_nftId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_dueDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_rentalPayment",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_collateral",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_collateralPayoutPeriod",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_nullificationTime",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyDeposited"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BadTimeBounds"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientValue"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidState"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NonTokenOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Unauthorized"
        },
        {
          "inputs": [],
          "type": "event",
          "name": "NftReturned",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "PayoutPeriodBegins",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "PayoutPeriodEnds",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "RentalStarted",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "borrowerAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "collateral",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "collateralPayoutPeriod",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "collectedCollateral",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "depositEth"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "depositNft"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "dueDate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ethIsDeposited",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lenderAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nftCollection",
          "outputs": [
            {
              "internalType": "contract ERC721",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nftId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nftIsDeposited",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nullificationTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC721Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rentalPayment",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rentalStartTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "returnNft"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawCollateral"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "withdrawEth"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "withdrawNft"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "withdrawCollateral()": {
            "details": "Anyone can call to withdraw collateral to lender"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "borrowerAddress()": {
            "notice": "The address of the tempory borrower"
          },
          "collateral()": {
            "notice": "The amount of additional ETH the lender requires as collateral"
          },
          "collateralPayoutPeriod()": {
            "notice": "The amount of time the collateral will be linearly paid out over if the NFT isn't returned on time"
          },
          "collectedCollateral()": {
            "notice": "The amount of collateral collected by the lender"
          },
          "constructor": {
            "notice": "Permissionless Rental Creation"
          },
          "depositEth()": {
            "notice": "Allows the borrow to post rent plus collateralTransfers the NFT to the borrower if the token has been deposited by the lender"
          },
          "depositNft()": {
            "notice": "Lender must deposit the ERC721 token to enable lendingFirst step after Rental Contract Construction"
          },
          "dueDate()": {
            "notice": "The expiration time of the rental"
          },
          "ethIsDeposited()": {
            "notice": "Store if the borrower's required ETH has been deposited"
          },
          "lenderAddress()": {
            "notice": "The address of the original owner"
          },
          "nftCollection()": {
            "notice": "The collection of the NFT to lend"
          },
          "nftId()": {
            "notice": "The id of the NFT within the collection"
          },
          "nftIsDeposited()": {
            "notice": "Store if the NFT has been deposited"
          },
          "nullificationTime()": {
            "notice": "The contract deployer specifies a period by which the assets must be deposited else the contract is voided"
          },
          "onERC721Received(address,address,uint256,bytes)": {
            "notice": "Allows this contract to custody ERC721 Tokens"
          },
          "rentalPayment()": {
            "notice": "The amount of ETH the borrower must pay the lender in order to rent the NFT if returned on time"
          },
          "rentalStartTime()": {
            "notice": "The time when the rental contract officially begins"
          },
          "returnNft()": {
            "notice": "Allows the Borrower to return the borrowed NFT"
          },
          "withdrawCollateral()": {
            "notice": "Transfers the amount of collateral owed to the lender"
          },
          "withdrawEth()": {
            "notice": "Allows the borrower to withdraw eth if the lender doesn't deposit"
          },
          "withdrawNft()": {
            "notice": "Allows the lender to withdraw an nft if the borrower doesn't deposit"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/utils/math/",
        ":prb-math/=lib/prb-math/contracts/",
        ":solmate/=lib/solmate/src/",
        ":weird-erc20/=lib/solmate/lib/weird-erc20/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Rental.sol": "Rental"
      },
      "libraries": {}
    },
    "sources": {
      "lib/solmate/src/tokens/ERC721.sol": {
        "keccak256": "0xf97378ab999188b3d5d97037fabbecbc726892c74cba6536899b852eb4756d6a",
        "urls": [
          "bzz-raw://a1861567f931416ad6b4b461fb55c7819461e9bc130a416892906f65d9d2b92c",
          "dweb:/ipfs/QmYRkJ6ahJz8BhdbntkgSuLxvKtwdLRyCCny9R3dVvNQm5"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/Rental.sol": {
        "keccak256": "0x7c84f70be2692a8fd8bc5411cb13212f1cdd1f9312f206883be489161761eb77",
        "urls": [
          "bzz-raw://59c7c141cdd6b2bd463d21b1929a0d9975a67529ef6a8d4f792eb63706eabdc1",
          "dweb:/ipfs/QmdpAhysYC3EF7RMuYcVBMy7MsuZJufKLtC5Pi87FMzX6X"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IERC721TokenReceiver.sol": {
        "keccak256": "0xc1bcde89ec7148df2835879ddb30fad6d5d58daaaea09147c89746929893ad6c",
        "urls": [
          "bzz-raw://da41afaa1b6970d3c9bdeab495243d4cb63a93042cf26c0681a5e4c0b74f1971",
          "dweb:/ipfs/QmTdGNdzEkuYdhteCSgqWri5i1G7KhcU1vSHWfGfozBdgj"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Rental.sol",
    "id": 4647,
    "exportedSymbols": {
      "ERC721": [4044],
      "IERC721TokenReceiver": [4663],
      "Rental": [4646]
    },
    "nodeType": "SourceUnit",
    "src": "39:11384:5",
    "nodes": [
      {
        "id": 4061,
        "nodeType": "PragmaDirective",
        "src": "39:23:5",
        "literals": ["solidity", "0.8", ".10"]
      },
      {
        "id": 4063,
        "nodeType": "ImportDirective",
        "src": "64:51:5",
        "absolutePath": "lib/solmate/src/tokens/ERC721.sol",
        "file": "solmate/tokens/ERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4647,
        "sourceUnit": 4060,
        "symbolAliases": [
          {
            "foreign": {
              "id": 4062,
              "name": "ERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "73:6:5",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 4065,
        "nodeType": "ImportDirective",
        "src": "116:75:5",
        "absolutePath": "src/interfaces/IERC721TokenReceiver.sol",
        "file": "./interfaces/IERC721TokenReceiver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4647,
        "sourceUnit": 4664,
        "symbolAliases": [
          {
            "foreign": {
              "id": 4064,
              "name": "IERC721TokenReceiver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "124:20:5",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 4646,
        "nodeType": "ContractDefinition",
        "src": "325:11097:5",
        "nodes": [
          {
            "id": 4069,
            "nodeType": "VariableDeclaration",
            "src": "570:38:5",
            "constant": false,
            "documentation": {
              "id": 4067,
              "nodeType": "StructuredDocumentation",
              "src": "520:45:5",
              "text": "@notice The address of the original owner"
            },
            "functionSelector": "69d81255",
            "mutability": "immutable",
            "name": "lenderAddress",
            "nameLocation": "595:13:5",
            "scope": 4646,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4068,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "570:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 4072,
            "nodeType": "VariableDeclaration",
            "src": "667:40:5",
            "constant": false,
            "documentation": {
              "id": 4070,
              "nodeType": "StructuredDocumentation",
              "src": "615:47:5",
              "text": "@notice The address of the tempory borrower"
            },
            "functionSelector": "7ba61ea5",
            "mutability": "immutable",
            "name": "borrowerAddress",
            "nameLocation": "692:15:5",
            "scope": 4646,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4071,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "667:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 4076,
            "nodeType": "VariableDeclaration",
            "src": "764:37:5",
            "constant": false,
            "documentation": {
              "id": 4073,
              "nodeType": "StructuredDocumentation",
              "src": "714:45:5",
              "text": "@notice The collection of the NFT to lend"
            },
            "functionSelector": "6588103b",
            "mutability": "immutable",
            "name": "nftCollection",
            "nameLocation": "788:13:5",
            "scope": 4646,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC721_$4044",
              "typeString": "contract ERC721"
            },
            "typeName": {
              "id": 4075,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4074,
                "name": "ERC721",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4044,
                "src": "764:6:5"
              },
              "referencedDeclaration": 4044,
              "src": "764:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$4044",
                "typeString": "contract ERC721"
              }
            },
            "visibility": "public"
          },
          {
            "id": 4079,
            "nodeType": "VariableDeclaration",
            "src": "864:30:5",
            "constant": false,
            "documentation": {
              "id": 4077,
              "nodeType": "StructuredDocumentation",
              "src": "808:51:5",
              "text": "@notice The id of the NFT within the collection"
            },
            "functionSelector": "c6bc5182",
            "mutability": "immutable",
            "name": "nftId",
            "nameLocation": "889:5:5",
            "scope": 4646,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4078,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "864:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 4082,
            "nodeType": "VariableDeclaration",
            "src": "1001:32:5",
            "constant": false,
            "documentation": {
              "id": 4080,
              "nodeType": "StructuredDocumentation",
              "src": "901:95:5",
              "text": "@notice The expiration time of the rental\n @dev Measured as a future block timestamp"
            },
            "functionSelector": "786716fe",
            "mutability": "immutable",
            "name": "dueDate",
            "nameLocation": "1026:7:5",
            "scope": 4646,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4081,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1001:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 4085,
            "nodeType": "VariableDeclaration",
            "src": "1152:38:5",
            "constant": false,
            "documentation": {
              "id": 4083,
              "nodeType": "StructuredDocumentation",
              "src": "1040:107:5",
              "text": "@notice The amount of ETH the borrower must pay the lender in order to rent the NFT if returned on time"
            },
            "functionSelector": "26102bf8",
            "mutability": "immutable",
            "name": "rentalPayment",
            "nameLocation": "1177:13:5",
            "scope": 4646,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4084,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1152:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 4088,
            "nodeType": "VariableDeclaration",
            "src": "1276:35:5",
            "constant": false,
            "documentation": {
              "id": 4086,
              "nodeType": "StructuredDocumentation",
              "src": "1197:74:5",
              "text": "@notice The amount of additional ETH the lender requires as collateral"
            },
            "functionSelector": "d8dfeb45",
            "mutability": "immutable",
            "name": "collateral",
            "nameLocation": "1301:10:5",
            "scope": 4646,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4087,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1276:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 4091,
            "nodeType": "VariableDeclaration",
            "src": "1433:47:5",
            "constant": false,
            "documentation": {
              "id": 4089,
              "nodeType": "StructuredDocumentation",
              "src": "1318:110:5",
              "text": "@notice The amount of time the collateral will be linearly paid out over if the NFT isn't returned on time"
            },
            "functionSelector": "5337bead",
            "mutability": "immutable",
            "name": "collateralPayoutPeriod",
            "nameLocation": "1458:22:5",
            "scope": 4646,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4090,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1433:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 4094,
            "nodeType": "VariableDeclaration",
            "src": "1610:42:5",
            "constant": false,
            "documentation": {
              "id": 4092,
              "nodeType": "StructuredDocumentation",
              "src": "1487:118:5",
              "text": "@notice The contract deployer specifies a period by which the assets must be deposited else the contract is voided"
            },
            "functionSelector": "e433e2cc",
            "mutability": "immutable",
            "name": "nullificationTime",
            "nameLocation": "1635:17:5",
            "scope": 4646,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4093,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1610:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 4097,
            "nodeType": "VariableDeclaration",
            "src": "1994:30:5",
            "constant": false,
            "documentation": {
              "id": 4095,
              "nodeType": "StructuredDocumentation",
              "src": "1831:158:5",
              "text": "@notice The time when the rental contract officially begins\n @dev NFT and rental payment have been sent to borrower and lender when this isn't zero"
            },
            "functionSelector": "ae233e9e",
            "mutability": "mutable",
            "name": "rentalStartTime",
            "nameLocation": "2009:15:5",
            "scope": 4646,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4096,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1994:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 4100,
            "nodeType": "VariableDeclaration",
            "src": "2096:34:5",
            "constant": false,
            "documentation": {
              "id": 4098,
              "nodeType": "StructuredDocumentation",
              "src": "2031:60:5",
              "text": "@notice The amount of collateral collected by the lender"
            },
            "functionSelector": "b70a7297",
            "mutability": "mutable",
            "name": "collectedCollateral",
            "nameLocation": "2111:19:5",
            "scope": 4646,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4099,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2096:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 4103,
            "nodeType": "VariableDeclaration",
            "src": "2189:26:5",
            "constant": false,
            "documentation": {
              "id": 4101,
              "nodeType": "StructuredDocumentation",
              "src": "2137:47:5",
              "text": "@notice Store if the NFT has been deposited"
            },
            "functionSelector": "ce09ffda",
            "mutability": "mutable",
            "name": "nftIsDeposited",
            "nameLocation": "2201:14:5",
            "scope": 4646,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4102,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2189:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 4106,
            "nodeType": "VariableDeclaration",
            "src": "2294:26:5",
            "constant": false,
            "documentation": {
              "id": 4104,
              "nodeType": "StructuredDocumentation",
              "src": "2222:67:5",
              "text": "@notice Store if the borrower's required ETH has been deposited"
            },
            "functionSelector": "8acc6adc",
            "mutability": "mutable",
            "name": "ethIsDeposited",
            "nameLocation": "2306:14:5",
            "scope": 4646,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4105,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2294:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 4109,
            "nodeType": "EventDefinition",
            "src": "2499:22:5",
            "anonymous": false,
            "documentation": {
              "id": 4107,
              "nodeType": "StructuredDocumentation",
              "src": "2327:167:5",
              "text": "-------------------------------------------- ///\n ------------------- EVENTS ----------------- ///\n -------------------------------------------- ///"
            },
            "name": "RentalStarted",
            "nameLocation": "2505:13:5",
            "parameters": {
              "id": 4108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2518:2:5"
            }
          },
          {
            "id": 4111,
            "nodeType": "EventDefinition",
            "src": "2526:20:5",
            "anonymous": false,
            "name": "NftReturned",
            "nameLocation": "2532:11:5",
            "parameters": {
              "id": 4110,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2543:2:5"
            }
          },
          {
            "id": 4113,
            "nodeType": "EventDefinition",
            "src": "2551:27:5",
            "anonymous": false,
            "name": "PayoutPeriodBegins",
            "nameLocation": "2557:18:5",
            "parameters": {
              "id": 4112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2575:2:5"
            }
          },
          {
            "id": 4115,
            "nodeType": "EventDefinition",
            "src": "2583:25:5",
            "anonymous": false,
            "name": "PayoutPeriodEnds",
            "nameLocation": "2589:16:5",
            "parameters": {
              "id": 4114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2605:2:5"
            }
          },
          {
            "id": 4118,
            "nodeType": "ErrorDefinition",
            "src": "2786:26:5",
            "documentation": {
              "id": 4116,
              "nodeType": "StructuredDocumentation",
              "src": "2614:167:5",
              "text": "-------------------------------------------- ///\n ------------------- ERRORS ----------------- ///\n -------------------------------------------- ///"
            },
            "name": "InsufficientValue",
            "nameLocation": "2792:17:5",
            "parameters": {
              "id": 4117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2809:2:5"
            }
          },
          {
            "id": 4120,
            "nodeType": "ErrorDefinition",
            "src": "2817:21:5",
            "name": "Unauthorized",
            "nameLocation": "2823:12:5",
            "parameters": {
              "id": 4119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2835:2:5"
            }
          },
          {
            "id": 4122,
            "nodeType": "ErrorDefinition",
            "src": "2843:21:5",
            "name": "InvalidState",
            "nameLocation": "2849:12:5",
            "parameters": {
              "id": 4121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2861:2:5"
            }
          },
          {
            "id": 4124,
            "nodeType": "ErrorDefinition",
            "src": "2869:22:5",
            "name": "BadTimeBounds",
            "nameLocation": "2875:13:5",
            "parameters": {
              "id": 4123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2888:2:5"
            }
          },
          {
            "id": 4126,
            "nodeType": "ErrorDefinition",
            "src": "2896:25:5",
            "name": "AlreadyDeposited",
            "nameLocation": "2902:16:5",
            "parameters": {
              "id": 4125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2918:2:5"
            }
          },
          {
            "id": 4128,
            "nodeType": "ErrorDefinition",
            "src": "2926:22:5",
            "name": "NonTokenOwner",
            "nameLocation": "2932:13:5",
            "parameters": {
              "id": 4127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2945:2:5"
            }
          },
          {
            "id": 4225,
            "nodeType": "FunctionDefinition",
            "src": "3173:1199:5",
            "body": {
              "id": 4224,
              "nodeType": "Block",
              "src": "3474:898:5",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 4154,
                          "name": "_nftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4137,
                          "src": "3583:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 4151,
                              "name": "_nftAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4135,
                              "src": "3562:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4150,
                            "name": "ERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4044,
                            "src": "3555:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721_$4044_$",
                              "typeString": "type(contract ERC721)"
                            }
                          },
                          "id": 4152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3555:19:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC721_$4044",
                            "typeString": "contract ERC721"
                          }
                        },
                        "id": 4153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ownerOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3589,
                        "src": "3555:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) view external returns (address)"
                        }
                      },
                      "id": 4155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3555:35:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 4156,
                      "name": "_lenderAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4131,
                      "src": "3594:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3555:53:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4161,
                  "nodeType": "IfStatement",
                  "src": "3551:81:5",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4158,
                        "name": "NonTokenOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4128,
                        "src": "3617:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3617:15:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4160,
                    "nodeType": "RevertStatement",
                    "src": "3610:22:5"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 4162,
                        "name": "_borrowerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4133,
                        "src": "3735:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 4163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "3735:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 4164,
                        "name": "_rentalPayment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4141,
                        "src": "3762:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 4165,
                        "name": "_collateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4143,
                        "src": "3779:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3762:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3735:55:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4171,
                  "nodeType": "IfStatement",
                  "src": "3731:87:5",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4168,
                        "name": "InsufficientValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4118,
                        "src": "3799:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3799:19:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4170,
                    "nodeType": "RevertStatement",
                    "src": "3792:26:5"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4172,
                      "name": "_dueDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4139,
                      "src": "3885:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 4173,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3896:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 4174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3896:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3885:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4179,
                  "nodeType": "IfStatement",
                  "src": "3881:54:5",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4176,
                        "name": "BadTimeBounds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4124,
                        "src": "3920:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3920:15:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4178,
                    "nodeType": "RevertStatement",
                    "src": "3913:22:5"
                  }
                },
                {
                  "expression": {
                    "id": 4185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4180,
                      "name": "lenderAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4069,
                      "src": "3996:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4183,
                          "name": "_lenderAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4131,
                          "src": "4020:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4012:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 4181,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4012:8:5",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4012:23:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3996:39:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4186,
                  "nodeType": "ExpressionStatement",
                  "src": "3996:39:5"
                },
                {
                  "expression": {
                    "id": 4192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4187,
                      "name": "borrowerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4072,
                      "src": "4045:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4190,
                          "name": "_borrowerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4133,
                          "src": "4071:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4063:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 4188,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4063:8:5",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4063:25:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4045:43:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4193,
                  "nodeType": "ExpressionStatement",
                  "src": "4045:43:5"
                },
                {
                  "expression": {
                    "id": 4198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4194,
                      "name": "nftCollection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4076,
                      "src": "4098:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721_$4044",
                        "typeString": "contract ERC721"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4196,
                          "name": "_nftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4135,
                          "src": "4121:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4195,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4044,
                        "src": "4114:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$4044_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 4197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4114:19:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721_$4044",
                        "typeString": "contract ERC721"
                      }
                    },
                    "src": "4098:35:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$4044",
                      "typeString": "contract ERC721"
                    }
                  },
                  "id": 4199,
                  "nodeType": "ExpressionStatement",
                  "src": "4098:35:5"
                },
                {
                  "expression": {
                    "id": 4202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4200,
                      "name": "nftId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4079,
                      "src": "4143:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4201,
                      "name": "_nftId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4137,
                      "src": "4151:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4143:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4203,
                  "nodeType": "ExpressionStatement",
                  "src": "4143:14:5"
                },
                {
                  "expression": {
                    "id": 4206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4204,
                      "name": "dueDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4082,
                      "src": "4167:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4205,
                      "name": "_dueDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4139,
                      "src": "4177:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4167:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4207,
                  "nodeType": "ExpressionStatement",
                  "src": "4167:18:5"
                },
                {
                  "expression": {
                    "id": 4210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4208,
                      "name": "rentalPayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4085,
                      "src": "4195:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4209,
                      "name": "_rentalPayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4141,
                      "src": "4211:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4195:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4211,
                  "nodeType": "ExpressionStatement",
                  "src": "4195:30:5"
                },
                {
                  "expression": {
                    "id": 4214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4212,
                      "name": "collateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4088,
                      "src": "4235:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4213,
                      "name": "_collateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4143,
                      "src": "4248:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4235:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4215,
                  "nodeType": "ExpressionStatement",
                  "src": "4235:24:5"
                },
                {
                  "expression": {
                    "id": 4218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4216,
                      "name": "collateralPayoutPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4091,
                      "src": "4269:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4217,
                      "name": "_collateralPayoutPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4145,
                      "src": "4294:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4269:48:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4219,
                  "nodeType": "ExpressionStatement",
                  "src": "4269:48:5"
                },
                {
                  "expression": {
                    "id": 4222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4220,
                      "name": "nullificationTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4094,
                      "src": "4327:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4221,
                      "name": "_nullificationTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4147,
                      "src": "4347:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4327:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4223,
                  "nodeType": "ExpressionStatement",
                  "src": "4327:38:5"
                }
              ]
            },
            "documentation": {
              "id": 4129,
              "nodeType": "StructuredDocumentation",
              "src": "3126:42:5",
              "text": "@notice Permissionless Rental Creation"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 4148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4131,
                  "mutability": "mutable",
                  "name": "_lenderAddress",
                  "nameLocation": "3202:14:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4225,
                  "src": "3194:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3194:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4133,
                  "mutability": "mutable",
                  "name": "_borrowerAddress",
                  "nameLocation": "3234:16:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4225,
                  "src": "3226:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3226:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4135,
                  "mutability": "mutable",
                  "name": "_nftAddress",
                  "nameLocation": "3268:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4225,
                  "src": "3260:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4134,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3260:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4137,
                  "mutability": "mutable",
                  "name": "_nftId",
                  "nameLocation": "3297:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4225,
                  "src": "3289:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3289:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4139,
                  "mutability": "mutable",
                  "name": "_dueDate",
                  "nameLocation": "3321:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4225,
                  "src": "3313:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3313:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4141,
                  "mutability": "mutable",
                  "name": "_rentalPayment",
                  "nameLocation": "3347:14:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4225,
                  "src": "3339:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4140,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3339:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4143,
                  "mutability": "mutable",
                  "name": "_collateral",
                  "nameLocation": "3379:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4225,
                  "src": "3371:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3371:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4145,
                  "mutability": "mutable",
                  "name": "_collateralPayoutPeriod",
                  "nameLocation": "3408:23:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4225,
                  "src": "3400:31:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4144,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3400:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4147,
                  "mutability": "mutable",
                  "name": "_nullificationTime",
                  "nameLocation": "3449:18:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4225,
                  "src": "3441:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4146,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3441:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3184:289:5"
            },
            "returnParameters": {
              "id": 4149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3474:0:5"
            },
            "scope": 4646,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4304,
            "nodeType": "FunctionDefinition",
            "src": "4683:1048:5",
            "body": {
              "id": 4303,
              "nodeType": "Block",
              "src": "4722:1009:5",
              "statements": [
                {
                  "condition": {
                    "id": 4229,
                    "name": "nftIsDeposited",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4103,
                    "src": "4779:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4233,
                  "nodeType": "IfStatement",
                  "src": "4775:45:5",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4230,
                        "name": "AlreadyDeposited",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4126,
                        "src": "4802:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4802:18:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4232,
                    "nodeType": "RevertStatement",
                    "src": "4795:25:5"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 4234,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4892:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4892:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 4236,
                      "name": "lenderAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4069,
                      "src": "4906:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4892:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4241,
                  "nodeType": "IfStatement",
                  "src": "4888:54:5",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4238,
                        "name": "Unauthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4120,
                        "src": "4928:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4928:14:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4240,
                    "nodeType": "RevertStatement",
                    "src": "4921:21:5"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 4242,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "5020:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 4243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5020:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 4244,
                      "name": "nullificationTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4094,
                      "src": "5039:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5020:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4254,
                  "nodeType": "IfStatement",
                  "src": "5016:105:5",
                  "trueBody": {
                    "id": 4253,
                    "nodeType": "Block",
                    "src": "5058:63:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 4249,
                                  "name": "borrowerAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4072,
                                  "src": "5093:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4248,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5085:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 4247,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5085:8:5",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5085:24:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 4246,
                            "name": "selfdestruct",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -21,
                            "src": "5072:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                              "typeString": "function (address payable)"
                            }
                          },
                          "id": 4251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5072:38:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4252,
                        "nodeType": "ExpressionStatement",
                        "src": "5072:38:5"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 4256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "5234:15:5",
                    "subExpression": {
                      "id": 4255,
                      "name": "ethIsDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4106,
                      "src": "5235:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4301,
                    "nodeType": "Block",
                    "src": "5381:344:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 4277,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5426:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4278,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5426:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4279,
                              "name": "borrowerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4072,
                              "src": "5438:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4280,
                              "name": "nftId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4079,
                              "src": "5455:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 4274,
                              "name": "nftCollection",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4076,
                              "src": "5395:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721_$4044",
                                "typeString": "contract ERC721"
                              }
                            },
                            "id": 4276,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3799,
                            "src": "5395:30:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 4281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5395:66:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4282,
                        "nodeType": "ExpressionStatement",
                        "src": "5395:66:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4288,
                              "name": "rentalPayment",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4085,
                              "src": "5603:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 4285,
                                  "name": "lenderAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4069,
                                  "src": "5579:13:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4284,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5571:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 4283,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5571:8:5",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4286,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5571:22:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 4287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "5571:31:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 4289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5571:46:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4290,
                        "nodeType": "ExpressionStatement",
                        "src": "5571:46:5"
                      },
                      {
                        "expression": {
                          "id": 4293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4291,
                            "name": "nftIsDeposited",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4103,
                            "src": "5631:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 4292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5648:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "5631:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4294,
                        "nodeType": "ExpressionStatement",
                        "src": "5631:21:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4295,
                            "name": "RentalStarted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4109,
                            "src": "5671:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 4296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5671:15:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4297,
                        "nodeType": "EmitStatement",
                        "src": "5666:20:5"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4298,
                            "name": "_beginRental",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4626,
                            "src": "5700:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 4299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5700:14:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4300,
                        "nodeType": "ExpressionStatement",
                        "src": "5700:14:5"
                      }
                    ]
                  },
                  "id": 4302,
                  "nodeType": "IfStatement",
                  "src": "5230:495:5",
                  "trueBody": {
                    "id": 4273,
                    "nodeType": "Block",
                    "src": "5251:124:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 4260,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5296:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4261,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5296:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 4264,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5316:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Rental_$4646",
                                    "typeString": "contract Rental"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Rental_$4646",
                                    "typeString": "contract Rental"
                                  }
                                ],
                                "id": 4263,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5308:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4262,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5308:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4265,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5308:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4266,
                              "name": "nftId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4079,
                              "src": "5323:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 4257,
                              "name": "nftCollection",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4076,
                              "src": "5265:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721_$4044",
                                "typeString": "contract ERC721"
                              }
                            },
                            "id": 4259,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3799,
                            "src": "5265:30:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 4267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5265:64:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4268,
                        "nodeType": "ExpressionStatement",
                        "src": "5265:64:5"
                      },
                      {
                        "expression": {
                          "id": 4271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4269,
                            "name": "nftIsDeposited",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4103,
                            "src": "5343:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 4270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5360:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "5343:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4272,
                        "nodeType": "ExpressionStatement",
                        "src": "5343:21:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4226,
              "nodeType": "StructuredDocumentation",
              "src": "4550:128:5",
              "text": "@notice Lender must deposit the ERC721 token to enable lending\n @notice First step after Rental Contract Construction"
            },
            "functionSelector": "de5fc8ec",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositNft",
            "nameLocation": "4692:10:5",
            "parameters": {
              "id": 4227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4702:2:5"
            },
            "returnParameters": {
              "id": 4228,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4722:0:5"
            },
            "scope": 4646,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4428,
            "nodeType": "FunctionDefinition",
            "src": "5896:1583:5",
            "body": {
              "id": 4427,
              "nodeType": "Block",
              "src": "5935:1544:5",
              "statements": [
                {
                  "condition": {
                    "id": 4308,
                    "name": "ethIsDeposited",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4106,
                    "src": "5992:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4312,
                  "nodeType": "IfStatement",
                  "src": "5988:45:5",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4309,
                        "name": "AlreadyDeposited",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4126,
                        "src": "6015:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6015:18:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4311,
                    "nodeType": "RevertStatement",
                    "src": "6008:25:5"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 4313,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6098:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6098:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 4315,
                      "name": "borrowerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4072,
                      "src": "6112:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6098:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4320,
                  "nodeType": "IfStatement",
                  "src": "6094:56:5",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4317,
                        "name": "Unauthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4120,
                        "src": "6136:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6136:14:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4319,
                    "nodeType": "RevertStatement",
                    "src": "6129:21:5"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 4321,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6165:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "6165:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 4323,
                        "name": "rentalPayment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4085,
                        "src": "6177:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 4324,
                        "name": "collateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4088,
                        "src": "6193:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6177:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6165:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4330,
                  "nodeType": "IfStatement",
                  "src": "6161:70:5",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4327,
                        "name": "InsufficientValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4118,
                        "src": "6212:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6212:19:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4329,
                    "nodeType": "RevertStatement",
                    "src": "6205:26:5"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 4331,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "6309:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 4332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6309:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 4333,
                      "name": "nullificationTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4094,
                      "src": "6328:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6309:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4365,
                  "nodeType": "IfStatement",
                  "src": "6305:269:5",
                  "trueBody": {
                    "id": 4364,
                    "nodeType": "Block",
                    "src": "6347:227:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 4337,
                                "name": "nftId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4079,
                                "src": "6387:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 4335,
                                "name": "nftCollection",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4076,
                                "src": "6365:13:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC721_$4044",
                                  "typeString": "contract ERC721"
                                }
                              },
                              "id": 4336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3589,
                              "src": "6365:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 4338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6365:28:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 4341,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6405:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Rental_$4646",
                                  "typeString": "contract Rental"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Rental_$4646",
                                  "typeString": "contract Rental"
                                }
                              ],
                              "id": 4340,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6397:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4339,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6397:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4342,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6397:13:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6365:45:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4356,
                        "nodeType": "IfStatement",
                        "src": "6361:151:5",
                        "trueBody": {
                          "id": 4355,
                          "nodeType": "Block",
                          "src": "6412:100:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 4349,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "6469:4:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Rental_$4646",
                                          "typeString": "contract Rental"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Rental_$4646",
                                          "typeString": "contract Rental"
                                        }
                                      ],
                                      "id": 4348,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6461:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 4347,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6461:7:5",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 4350,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6461:13:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 4351,
                                    "name": "lenderAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4069,
                                    "src": "6476:13:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 4352,
                                    "name": "nftId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4079,
                                    "src": "6491:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 4344,
                                    "name": "nftCollection",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4076,
                                    "src": "6430:13:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC721_$4044",
                                      "typeString": "contract ERC721"
                                    }
                                  },
                                  "id": 4346,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeTransferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3799,
                                  "src": "6430:30:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256) external"
                                  }
                                },
                                "id": 4353,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6430:67:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4354,
                              "nodeType": "ExpressionStatement",
                              "src": "6430:67:5"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 4360,
                                  "name": "borrowerAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4072,
                                  "src": "6546:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4359,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6538:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 4358,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6538:8:5",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4361,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6538:24:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 4357,
                            "name": "selfdestruct",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -21,
                            "src": "6525:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                              "typeString": "function (address payable)"
                            }
                          },
                          "id": 4362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6525:38:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4363,
                        "nodeType": "ExpressionStatement",
                        "src": "6525:38:5"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 4366,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6683:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "6683:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 4368,
                        "name": "rentalPayment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4085,
                        "src": "6695:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 4369,
                        "name": "collateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4088,
                        "src": "6711:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6695:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6683:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4388,
                  "nodeType": "IfStatement",
                  "src": "6679:139:5",
                  "trueBody": {
                    "id": 4387,
                    "nodeType": "Block",
                    "src": "6723:95:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4384,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 4378,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "6766:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 4379,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "6766:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 4382,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 4380,
                                      "name": "rentalPayment",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4085,
                                      "src": "6779:13:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 4381,
                                      "name": "collateral",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4088,
                                      "src": "6795:10:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6779:26:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 4383,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6778:28:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6766:40:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 4374,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "6745:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 4375,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "6745:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4373,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6737:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 4372,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6737:8:5",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4376,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6737:19:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 4377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "6737:28:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 4385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6737:70:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4386,
                        "nodeType": "ExpressionStatement",
                        "src": "6737:70:5"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 4390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "6915:15:5",
                    "subExpression": {
                      "id": 4389,
                      "name": "nftIsDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4103,
                      "src": "6916:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4425,
                    "nodeType": "Block",
                    "src": "7059:414:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4401,
                              "name": "rentalPayment",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4085,
                              "src": "7202:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 4398,
                                  "name": "lenderAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4069,
                                  "src": "7178:13:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4397,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7170:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 4396,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7170:8:5",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4399,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7170:22:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 4400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "7170:31:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 4402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7170:46:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4403,
                        "nodeType": "ExpressionStatement",
                        "src": "7170:46:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 4409,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "7335:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Rental_$4646",
                                    "typeString": "contract Rental"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Rental_$4646",
                                    "typeString": "contract Rental"
                                  }
                                ],
                                "id": 4408,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7327:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4407,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7327:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7327:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4411,
                              "name": "borrowerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4072,
                              "src": "7342:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4412,
                              "name": "nftId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4079,
                              "src": "7359:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 4404,
                              "name": "nftCollection",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4076,
                              "src": "7296:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721_$4044",
                                "typeString": "contract ERC721"
                              }
                            },
                            "id": 4406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3799,
                            "src": "7296:30:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 4413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7296:69:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4414,
                        "nodeType": "ExpressionStatement",
                        "src": "7296:69:5"
                      },
                      {
                        "expression": {
                          "id": 4417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4415,
                            "name": "ethIsDeposited",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4106,
                            "src": "7379:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 4416,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7396:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "7379:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4418,
                        "nodeType": "ExpressionStatement",
                        "src": "7379:21:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4419,
                            "name": "RentalStarted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4109,
                            "src": "7419:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 4420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7419:15:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4421,
                        "nodeType": "EmitStatement",
                        "src": "7414:20:5"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4422,
                            "name": "_beginRental",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4626,
                            "src": "7448:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 4423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7448:14:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4424,
                        "nodeType": "ExpressionStatement",
                        "src": "7448:14:5"
                      }
                    ]
                  },
                  "id": 4426,
                  "nodeType": "IfStatement",
                  "src": "6911:562:5",
                  "trueBody": {
                    "id": 4395,
                    "nodeType": "Block",
                    "src": "6932:121:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 4393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4391,
                            "name": "ethIsDeposited",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4106,
                            "src": "7013:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 4392,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7030:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "7013:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4394,
                        "nodeType": "ExpressionStatement",
                        "src": "7013:21:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4305,
              "nodeType": "StructuredDocumentation",
              "src": "5737:154:5",
              "text": "@notice Allows the borrow to post rent plus collateral\n @notice Transfers the NFT to the borrower if the token has been deposited by the lender"
            },
            "functionSelector": "439370b1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositEth",
            "nameLocation": "5905:10:5",
            "parameters": {
              "id": 4306,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5915:2:5"
            },
            "returnParameters": {
              "id": 4307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5935:0:5"
            },
            "scope": 4646,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4460,
            "nodeType": "FunctionDefinition",
            "src": "7570:454:5",
            "body": {
              "id": 4459,
              "nodeType": "Block",
              "src": "7610:414:5",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 4432,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "7685:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7685:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 4434,
                      "name": "lenderAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4069,
                      "src": "7699:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7685:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4439,
                  "nodeType": "IfStatement",
                  "src": "7681:54:5",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4436,
                        "name": "Unauthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4120,
                        "src": "7721:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7721:14:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4438,
                    "nodeType": "RevertStatement",
                    "src": "7714:21:5"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 4443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "7840:15:5",
                      "subExpression": {
                        "id": 4440,
                        "name": "nftIsDeposited",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4103,
                        "src": "7841:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "id": 4442,
                      "name": "ethIsDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4106,
                      "src": "7859:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7840:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4447,
                  "nodeType": "IfStatement",
                  "src": "7836:60:5",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4444,
                        "name": "InvalidState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4122,
                        "src": "7882:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7882:14:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4446,
                    "nodeType": "RevertStatement",
                    "src": "7875:21:5"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4453,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7989:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Rental_$4646",
                              "typeString": "contract Rental"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Rental_$4646",
                              "typeString": "contract Rental"
                            }
                          ],
                          "id": 4452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7981:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4451,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7981:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7981:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4455,
                        "name": "lenderAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4069,
                        "src": "7996:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4456,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4079,
                        "src": "8011:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4448,
                        "name": "nftCollection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4076,
                        "src": "7950:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$4044",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 4450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3799,
                      "src": "7950:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 4457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7950:67:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4458,
                  "nodeType": "ExpressionStatement",
                  "src": "7950:67:5"
                }
              ]
            },
            "documentation": {
              "id": 4429,
              "nodeType": "StructuredDocumentation",
              "src": "7485:80:5",
              "text": "@notice Allows the lender to withdraw an nft if the borrower doesn't deposit"
            },
            "functionSelector": "8ed013a6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawNft",
            "nameLocation": "7579:11:5",
            "parameters": {
              "id": 4430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7590:2:5"
            },
            "returnParameters": {
              "id": 4431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7610:0:5"
            },
            "scope": 4646,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4491,
            "nodeType": "FunctionDefinition",
            "src": "8112:468:5",
            "body": {
              "id": 4490,
              "nodeType": "Block",
              "src": "8152:428:5",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 4464,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "8231:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "8231:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 4466,
                      "name": "borrowerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4072,
                      "src": "8245:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8231:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4471,
                  "nodeType": "IfStatement",
                  "src": "8227:56:5",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4468,
                        "name": "Unauthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4120,
                        "src": "8269:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8269:14:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4470,
                    "nodeType": "RevertStatement",
                    "src": "8262:21:5"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 4475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4472,
                      "name": "nftIsDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4103,
                      "src": "8382:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "id": 4474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "8400:15:5",
                      "subExpression": {
                        "id": 4473,
                        "name": "ethIsDeposited",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4106,
                        "src": "8401:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "8382:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4479,
                  "nodeType": "IfStatement",
                  "src": "8378:60:5",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4476,
                        "name": "InvalidState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4122,
                        "src": "8424:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8424:14:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4478,
                    "nodeType": "RevertStatement",
                    "src": "8417:21:5"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4485,
                          "name": "rentalPayment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4085,
                          "src": "8546:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 4486,
                          "name": "collateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4088,
                          "src": "8562:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8546:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4482,
                            "name": "borrowerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4072,
                            "src": "8520:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8512:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 4480,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8512:8:5",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8512:24:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 4484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "8512:33:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8512:61:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4489,
                  "nodeType": "ExpressionStatement",
                  "src": "8512:61:5"
                }
              ]
            },
            "documentation": {
              "id": 4461,
              "nodeType": "StructuredDocumentation",
              "src": "8030:77:5",
              "text": "@notice Allows the borrower to withdraw eth if the lender doesn't deposit"
            },
            "functionSelector": "a0ef91df",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawEth",
            "nameLocation": "8121:11:5",
            "parameters": {
              "id": 4462,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8132:2:5"
            },
            "returnParameters": {
              "id": 4463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8152:0:5"
            },
            "scope": 4646,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4540,
            "nodeType": "FunctionDefinition",
            "src": "8649:751:5",
            "body": {
              "id": 4539,
              "nodeType": "Block",
              "src": "8679:721:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4498,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8778:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8778:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4500,
                        "name": "lenderAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4069,
                        "src": "8790:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4501,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4079,
                        "src": "8805:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4495,
                        "name": "nftCollection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4076,
                        "src": "8747:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$4044",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 4497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3799,
                      "src": "8747:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 4502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8747:64:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4503,
                  "nodeType": "ExpressionStatement",
                  "src": "8747:64:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 4504,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "8880:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 4505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "8880:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 4506,
                      "name": "dueDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4082,
                      "src": "8899:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8880:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4520,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 4517,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "9131:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 4518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "9131:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 4519,
                        "name": "dueDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4082,
                        "src": "9149:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9131:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 4537,
                    "nodeType": "IfStatement",
                    "src": "9127:267:5",
                    "trueBody": {
                      "id": 4536,
                      "nodeType": "Block",
                      "src": "9158:236:5",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4521,
                              "name": "withdrawCollateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4616,
                              "src": "9232:18:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                "typeString": "function ()"
                              }
                            },
                            "id": 4522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9232:20:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 4523,
                          "nodeType": "ExpressionStatement",
                          "src": "9232:20:5"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 4531,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "9369:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Rental_$4646",
                                        "typeString": "contract Rental"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Rental_$4646",
                                        "typeString": "contract Rental"
                                      }
                                    ],
                                    "id": 4530,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "9361:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 4529,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "9361:7:5",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 4532,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9361:13:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 4533,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "src": "9361:21:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 4526,
                                    "name": "borrowerAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4072,
                                    "src": "9335:15:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 4525,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9327:8:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 4524,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9327:8:5",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 4527,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9327:24:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 4528,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "transfer",
                              "nodeType": "MemberAccess",
                              "src": "9327:33:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256)"
                              }
                            },
                            "id": 4534,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9327:56:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 4535,
                          "nodeType": "ExpressionStatement",
                          "src": "9327:56:5"
                        }
                      ]
                    }
                  },
                  "id": 4538,
                  "nodeType": "IfStatement",
                  "src": "8876:518:5",
                  "trueBody": {
                    "id": 4516,
                    "nodeType": "Block",
                    "src": "8908:123:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4513,
                              "name": "collateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4088,
                              "src": "9009:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 4510,
                                  "name": "borrowerAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4072,
                                  "src": "8983:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4509,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8975:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 4508,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8975:8:5",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4511,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8975:24:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 4512,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "8975:33:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 4514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8975:45:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4515,
                        "nodeType": "ExpressionStatement",
                        "src": "8975:45:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4492,
              "nodeType": "StructuredDocumentation",
              "src": "8586:58:5",
              "text": "@notice Allows the Borrower to return the borrowed NFT"
            },
            "functionSelector": "2572fd54",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "returnNft",
            "nameLocation": "8658:9:5",
            "parameters": {
              "id": 4493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8667:2:5"
            },
            "returnParameters": {
              "id": 4494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8679:0:5"
            },
            "scope": 4646,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4616,
            "nodeType": "FunctionDefinition",
            "src": "9538:1072:5",
            "body": {
              "id": 4615,
              "nodeType": "Block",
              "src": "9575:1035:5",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 4544,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "9693:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 4545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "9693:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 4546,
                      "name": "dueDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4082,
                      "src": "9712:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9693:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4551,
                  "nodeType": "IfStatement",
                  "src": "9689:53:5",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4548,
                        "name": "InvalidState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4122,
                        "src": "9728:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9728:14:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4550,
                    "nodeType": "RevertStatement",
                    "src": "9721:21:5"
                  }
                },
                {
                  "assignments": [4553],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4553,
                      "mutability": "mutable",
                      "name": "tardiness",
                      "nameLocation": "9761:9:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 4615,
                      "src": "9753:17:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4552,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9753:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4558,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 4554,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "9773:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 4555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "9773:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 4556,
                      "name": "dueDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4082,
                      "src": "9791:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9773:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9753:45:5"
                },
                {
                  "assignments": [4560],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4560,
                      "mutability": "mutable",
                      "name": "payableAmount",
                      "nameLocation": "9816:13:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 4615,
                      "src": "9808:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4559,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9808:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4561,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9808:21:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4562,
                      "name": "tardiness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4553,
                      "src": "9843:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 4563,
                      "name": "collateralPayoutPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4091,
                      "src": "9856:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9843:35:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4579,
                    "nodeType": "Block",
                    "src": "9937:90:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 4577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4570,
                            "name": "payableAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4560,
                            "src": "9951:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4576,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 4573,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 4571,
                                    "name": "tardiness",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4553,
                                    "src": "9968:9:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 4572,
                                    "name": "collateral",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4088,
                                    "src": "9980:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9968:22:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 4574,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "9967:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 4575,
                              "name": "collateralPayoutPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4091,
                              "src": "9994:22:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9967:49:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9951:65:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4578,
                        "nodeType": "ExpressionStatement",
                        "src": "9951:65:5"
                      }
                    ]
                  },
                  "id": 4580,
                  "nodeType": "IfStatement",
                  "src": "9839:188:5",
                  "trueBody": {
                    "id": 4569,
                    "nodeType": "Block",
                    "src": "9880:51:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 4567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4565,
                            "name": "payableAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4560,
                            "src": "9894:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 4566,
                            "name": "collateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4088,
                            "src": "9910:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9894:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4568,
                        "nodeType": "ExpressionStatement",
                        "src": "9894:26:5"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 4583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4581,
                      "name": "payableAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4560,
                      "src": "10089:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 4582,
                      "name": "collectedCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4100,
                      "src": "10106:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10089:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4584,
                  "nodeType": "ExpressionStatement",
                  "src": "10089:36:5"
                },
                {
                  "expression": {
                    "id": 4587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4585,
                      "name": "collectedCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4100,
                      "src": "10179:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 4586,
                      "name": "payableAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4560,
                      "src": "10202:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10179:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4588,
                  "nodeType": "ExpressionStatement",
                  "src": "10179:36:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 4591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4589,
                      "name": "ethIsDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4106,
                      "src": "10229:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 4590,
                      "name": "nftIsDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4103,
                      "src": "10247:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "10229:32:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4613,
                    "nodeType": "Block",
                    "src": "10411:193:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 4608,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "10579:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Rental_$4646",
                                      "typeString": "contract Rental"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Rental_$4646",
                                      "typeString": "contract Rental"
                                    }
                                  ],
                                  "id": 4607,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10571:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 4606,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10571:7:5",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 4609,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10571:13:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 4610,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "10571:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 4603,
                                  "name": "borrowerAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4072,
                                  "src": "10545:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4602,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10537:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 4601,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10537:8:5",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4604,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10537:24:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 4605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "10537:33:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 4611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10537:56:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4612,
                        "nodeType": "ExpressionStatement",
                        "src": "10537:56:5"
                      }
                    ]
                  },
                  "id": 4614,
                  "nodeType": "IfStatement",
                  "src": "10226:378:5",
                  "trueBody": {
                    "id": 4600,
                    "nodeType": "Block",
                    "src": "10263:142:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4597,
                              "name": "payableAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4560,
                              "src": "10380:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 4594,
                                  "name": "lenderAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4069,
                                  "src": "10356:13:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4593,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10348:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 4592,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10348:8:5",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4595,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10348:22:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 4596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "10348:31:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 4598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10348:46:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4599,
                        "nodeType": "ExpressionStatement",
                        "src": "10348:46:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4541,
              "nodeType": "StructuredDocumentation",
              "src": "9406:127:5",
              "text": "@notice Transfers the amount of collateral owed to the lender\n @dev Anyone can call to withdraw collateral to lender"
            },
            "functionSelector": "59c153be",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawCollateral",
            "nameLocation": "9547:18:5",
            "parameters": {
              "id": 4542,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9565:2:5"
            },
            "returnParameters": {
              "id": 4543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9575:0:5"
            },
            "scope": 4646,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4626,
            "nodeType": "FunctionDefinition",
            "src": "10894:83:5",
            "body": {
              "id": 4625,
              "nodeType": "Block",
              "src": "10927:50:5",
              "statements": [
                {
                  "expression": {
                    "id": 4623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4620,
                      "name": "rentalStartTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4097,
                      "src": "10937:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 4621,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "10955:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 4622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "10955:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10937:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4624,
                  "nodeType": "ExpressionStatement",
                  "src": "10937:33:5"
                }
              ]
            },
            "documentation": {
              "id": 4617,
              "nodeType": "StructuredDocumentation",
              "src": "10616:167:5",
              "text": "-------------------------------------------- ///\n -------------- INTERNAL LOGIC -------------- ///\n -------------------------------------------- ///"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beginRental",
            "nameLocation": "10903:12:5",
            "parameters": {
              "id": 4618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10915:2:5"
            },
            "returnParameters": {
              "id": 4619,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10927:0:5"
            },
            "scope": 4646,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 4645,
            "nodeType": "FunctionDefinition",
            "src": "11217:203:5",
            "body": {
              "id": 4644,
              "nodeType": "Block",
              "src": "11350:70:5",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 4640,
                        "name": "IERC721TokenReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4663,
                        "src": "11367:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC721TokenReceiver_$4663_$",
                          "typeString": "type(contract IERC721TokenReceiver)"
                        }
                      },
                      "id": 4641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4662,
                      "src": "11367:37:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                        "typeString": "function IERC721TokenReceiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
                      }
                    },
                    "id": 4642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "11367:46:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 4639,
                  "id": 4643,
                  "nodeType": "Return",
                  "src": "11360:53:5"
                }
              ]
            },
            "documentation": {
              "id": 4627,
              "nodeType": "StructuredDocumentation",
              "src": "11155:57:5",
              "text": "@notice Allows this contract to custody ERC721 Tokens"
            },
            "functionSelector": "150b7a02",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "11226:16:5",
            "parameters": {
              "id": 4636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4629,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4645,
                  "src": "11252:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4628,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11252:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4631,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4645,
                  "src": "11269:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11269:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4633,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4645,
                  "src": "11286:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4632,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11286:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4635,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4645,
                  "src": "11303:14:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4634,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11303:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11242:81:5"
            },
            "returnParameters": {
              "id": 4639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4638,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4645,
                  "src": "11342:6:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 4637,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "11342:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11341:8:5"
            },
            "scope": 4646,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Rental",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4066,
          "nodeType": "StructuredDocumentation",
          "src": "193:132:5",
          "text": "@title Rental\n @author gstenger98, andreas <andreas@nascent.xyz>\n @notice A Collateral-based ERC721 Token Rental Protocol"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [4646],
        "name": "Rental",
        "nameLocation": "334:6:5",
        "scope": 4647,
        "usedErrors": [4118, 4120, 4122, 4124, 4126, 4128]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 5
}
